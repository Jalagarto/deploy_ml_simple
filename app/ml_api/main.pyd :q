# main.py

from fastapi import FastAPI
from pydantic import BaseModel
import joblib
import numpy as np

# Load the trained pipeline
pipe = joblib.load(
    "../model_pipeline.joblib"
)  # assuming you saved your model as 'model_pipeline.joblib'

app = FastAPI()


# Define a Pydantic model to validate input data
class InputData(BaseModel):
    feature1: float
    feature2: float
    feature3: float
    feature4: float


@app.post("/predict/")
def predict(input_data: InputData):
    # Convert input data to numpy array
    data = np.array(
        [
            [
                input_data.feature1,
                input_data.feature2,
                input_data.feature3,
                input_data.feature4,
            ]
        ]
    )

    # Make predictions using the trained pipeline
    prediction = pipe.predict(data)

    # Return the prediction result
    return {"prediction": prediction.tolist()}
